@prefix sbol_cdType <http://sbols.org/v2/componentDefinition_type>
@prefix sbol_cdRole <http://sbols.org/v2/componentDefinition_role>

############### Generic Components ##################

# Sequence encodings

iupac.DNA = <http://www.chem.qmul.ac.uk/iubmb/misc/naseq.html>
iupac.RNA = <http://www.chem.qmul.ac.uk/iubmb/misc/naseq.html>
iupac.Protein = <http://www.chem.qmul.ac.uk/iupac/AminoAcid/>
opensmiles.SMILES = <http://www.opensmiles.org/opensmiles.html>

iupac.DNA : SequenceEncoding()
iupac.RNA : SequenceEncoding()
iupac.Protein : SequenceEncoding()
opensmiles.SMILES : SequenceEncoding()

# ComponentDefinition type
sbol_cdType.DNA = biopax.DnaRegion
sbol_cdType.RNA = biopax.RnaRegion
sbol_cdType.Protein = biopax.Protein
sbol_cdType.SmallMolecule = biopax.SmallMolecule
sbol_cdType.Complex = biopax.Complex

biopax.DnaRegion     : ComponentDefinitionType()
biopax.RnaRegion     : ComponentDefinitionType()
biopax.Protein       : ComponentDefinitionType()
biopax.SmallMolecule : ComponentDefinitionType()
biopax.Complex       : ComponentDefinitionType()

biopax.PhysicalEntity : owl.Class()
  owl.subClassOf = ComponentDefinitionType

# ComponentDefinition role

sbol_cdRole.Promoter       = <http://identifiers.org/so/SO:0000167>
sbol_cdRole.RBS            = <http://identifiers.org/so/SO:0000139>
sbol_cdRole.CDS            = <http://identifiers.org/so/SO:0000316>
sbol_cdRole.Terminator     = <http://identifiers.org/so/SO:0000141>
sbol_cdRole.Gene           = <http://identifiers.org/so/SO:0000704>
sbol_cdRole.Operator       = <http://identifiers.org/so/SO:0000057>
sbol_cdRole.EngineeredGene = <http://identifiers.org/so/SO:0000280>
sbol_cdRole.mRNA           = <http://identifiers.org/so/SO:0000234>
sbol_cdRole.Effector       = <http://identifiers.org/chebi/CHEBI:35224>

# Listing these individually isn't a long-term solution!
<http://identifiers.org/so/SO:0000167> : <http://identifiers.org/so/SO:0000000>()
<http://identifiers.org/so/SO:0000139> : <http://identifiers.org/so/SO:0000000>()
<http://identifiers.org/so/SO:0000316> : <http://identifiers.org/so/SO:0000000>()
<http://identifiers.org/so/SO:0000141> : <http://identifiers.org/so/SO:0000000>()
<http://identifiers.org/so/SO:0000704> : <http://identifiers.org/so/SO:0000000>()
<http://identifiers.org/so/SO:0000057> : <http://identifiers.org/so/SO:0000000>()
<http://identifiers.org/so/SO:0000280> : <http://identifiers.org/so/SO:0000000>()
<http://identifiers.org/so/SO:0000234> : <http://identifiers.org/so/SO:0000000>()
<http://identifiers.org/chebi/CHEBI:35224> : ComponentDefinitionRole()

<http://identifiers.org/so/SO:0000000> : owl.Class()
  dc.description = "A sequence_feature with an extent greater than zero."
  owl.subClassOf = ComponentDefinitionRole

chebi._52206 : owl.Class()
  dc.description = "A biological role played by the molecular entity or part thereof within a biochemical context."
  owl.subClassOf = ComponentDefinitionRole


# Templates

DnaSequence(x) => Sequence()
  encoding = iupac.DNA
  elements = x

RnaSequence(x) => Sequence()
  encoding = iupac.DNA
  elements = x

ProteinSequence(x) => Sequence()
  encoding = iupac.Protein
  elements = x

ChemicalStructure(x) => Sequence()
  encoding = opensmiles.SMILES

# DNA/RNA/Protein

DnaComponent() => ComponentDefinition()
   type = sbol_cdType.DNA

Dna() => ComponentDefinition()
   type = sbol_cdType.DNA

RnaComponent() => ComponentDefinition()
   type = sbol_cdType.RNA

Rna() => ComponentDefinition()
   type = sbol_cdType.RNA

ProteinComponent() => ComponentDefinition()
  type = sbol_cdType.Protein

Protein() => ComponentDefinition()
  type = sbol_cdType.Protein

SmallMoleculeComponent() => ComponentDefinition()
  type = sbol_cdType.SmallMolecule

SmallMolecule() => ComponentDefinition()
  type = sbol_cdType.SmallMolecule

ComplexComponent() => ComponentDefinition()
  type = sbol_cdType.Complex

Complex() => ComponentDefinition()
  type = sbol_cdType.Complex
# Common DNA components

Promoter() => DnaComponent()
  role = sbol_cdRole.Promoter

RBS() => DnaComponent()
  role = sbol_cdRole.RBS

CDS() => DnaComponent()
  role = sbol_cdRole.CDS

Terminator() => DnaComponent()
  role = sbol_cdRole.Terminator

Operator() => DnaComponent()
  role = sbol_cdRole.Operator

# Common RNA components

CDS_RNA() => RnaComponent()
  role = sbol_cdRole.CDS


# SequenceConstraint restrictions

constraint(sbj, obj, restr) => SequenceConstraint()
  restriction = restr
  subject = sbj
  object = obj

precedes(sbj, obj) => constraint(sbj, obj, precedes)

sameOrientationAs(sbj, obj) => constraint(sbj, obj, sameOrientationAs)

oppositeOrientationTo(sbj, obj) => constraint(sbj, obj, oppositeOrientationTo)

# locations

# for example: at(pTetR,      1,   55, inline)
at(cmpt, start, end, ori) => SequenceAnnotation()
  component = cmpt
  location : Range()
    start = start
    end = end
    orientation = ori

# MapsTo infix constructors
replacedBy(inModule, inSubModule) => MapsTo()
  refinement = useRemote
  local = inModule
  remote = inSubModule

replaces(inModule, inSubModule) => MapsTo()
  refinement = useLocal
  local = inModule
  remote = inSubModule

isIdenticalTo(inModule, inSubModule) => MapsTo()
  refinement = verifyIdentical
  local = inModule
  remote = inSubModule

mergedWith(inModule, inSubModule) => MapsTo()
  refinement = merge
  local = inModule
  remote = inSubModule